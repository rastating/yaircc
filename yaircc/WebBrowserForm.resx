<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAAAQ
        AAASCwAAEgsAAAAAAAAAAAAAq6urAKurqwCrq6sAq6urAKurqwAODg4eDg4Ofg4ODsYODg7wDg4O/w4O
        Dv8ODg7/Dg4O/w4ODv8ODg7/Dg4O/w4ODv8ODg7/Dg4O/w4ODv8ODg7/Dg4O/w4ODv8ODg7kDg4OpQ4O
        DjwODg4ADg4OAA4ODgAODg4ADg4OAA4ODgCrq6sAq6urAKurqwCrq6sADg4OiiAgIP9cXFz/hISE/5aW
        lv+ampr/mJiY/5eXl/+Xl5f/l5eX/5eXl/+Xl5f/l5eX/5eXl/+Xl5f/l5eX/5eXl/+ZmZn/nJyc/5SU
        lP90dHT/KCgo/w4ODooODg4ADg4OAA4ODgAODg4ADg4OAKysrACsrKwArKysAA4ODo0+Pj7/np6e/5OT
        k/+Hh4f/gICA/319ff97e3v/e3t7/3t7e/97e3v/e3t7/3t7e/97e3v/e3t7/3t7e/97e3v/e3t7/3x8
        fP9+fn7/hYWF/5SUlP+ioqL/Kioq/w4ODlEODg4ADg4OAA4ODgAODg4Ara2tAK2trQAODg4/JCQk/6Cg
        oP+MjIz/enp6/3BwcP9ra2v/aWlp/2hoaP9oaGj/aGho/2hoaP9oaGj/aGho/2hoaP9oaGj/aGho/2ho
        aP9oaGj/aWlp/2pqav9vb2//fX19/5OTk/+CgoL/Dg4Oug4ODgAODg4ADg4OAA4ODgCurq4Arq6uAA4O
        Dqh3d3f/lJSU/3x8fP9sbGz/ZWVl/2NjY/9iYmL/YWFh/2FhYf9iYmL/YmJi/2FhYf9NTU3/Wlpa/2Fh
        Yf9hYWH/YWFh/2FhYf9hYWH/YmJi/2VlZf9wcHD/hoaG/6Ghof8XFxf/Dg4ODw4ODgAODg4ADg4OAK+v
        rwCvr68ADg4O6pycnP+Kior/dHR0/2dnZ/9kZGT/Y2Nj/2NjY/9jY2P/ZWVl/2lpaf9UVFT/EBAQ/yoq
        Kv8dHR3/QUFB/2NjY/9jY2P/Y2Nj/2NjY/9jY2P/ZGRk/21tbf+AgID/nZ2d/ywsLP8ODg4wDg4OAA4O
        DgAODg4AsbGxALGxsQAODg75pKSk/4mJif90dHT/aWlp/2ZmZv9mZmb/ZmZm/2dnZ/9ubm7/W1tb/xIS
        Ev9WVlb/QEBA/5KSkv8dHR3/QkJC/2ZmZv9mZmb/ZmZm/2ZmZv9oaGj/cXFx/4KCgv+enp7/NDQ0/w4O
        DjwODg4ADg4OAA4ODgC0tLQAtbW1AA4ODtWUlJT/lZWV/4CAgP9xcXH/ampq/2lpaf9paWn/bGxs/1hY
        WP8SEhL/fHx8/3V1df9GRkb/ra2t/5OTk/8dHR3/Q0ND/2lpaf9paWn/aWlp/21tbf97e3v/jo6O/6Wl
        pf8fHx//Dg4OGw4ODgAODg4ADg4OALa2tgC5ubkADg4OhGhoaP+np6f/kZGR/3x8fP9vb2//bGxs/25u
        bv9UVFT/FBQU/4KCgv+oqKj/cnJy/0tLS/+qqqr/o6Oj/5GRkf8dHR3/RERE/2xsbP9ubm7/d3d3/4qK
        iv+enp7/lpaW/w4ODs8ODg4ADg4OAA4ODgAODg4At7e3ALu7uwAODg4bHx8f/7W1tf+jo6P/jY2N/3t7
        e/9ycnL/UVFR/xQUFP+CgoL/m5ub/5qamv9oaGj/UVFR/6Wlpf+Xl5f/mJiY/46Ojv8bGxv/R0dH/3Z2
        dv+Hh4f/nJyc/7Gxsf9WVlb/Dg4OZg4ODgAODg4ADg4OAA4ODgC5ubkAvLy8AMLCwgAODg6QcHBw/7a2
        tv+hoaH/ioqK/1RUVP8WFhb/hoaG/5iYmP+QkJD/nJyc/4mJif85OTn/s7Oz/52dnf+Ojo7/lZWV/4+P
        j/8cHBz/U1NT/5ubm/+wsLD/paWl/xISEv8ODg4GDg4OAA4ODgAODg4ADg4OALm5uQC7u7sAwcHBAA4O
        Dh4SEhL/qqqq/7a2tv9nZ2f/Ghoa/4mJif+ZmZn/jY2N/5qamv+1tbX/a2tr/zIyMv9ra2v/tra2/5ub
        m/+MjIz/l5eX/5KSkv8cHBz/bGxs/7+/v/80NDT/Dg4ObA4ODgAODg4ADg4OAA4ODgAODg4Au7u7ALy8
        vAC/v78AxsbGAA4ODmwpKSn/iYmJ/xwcHP+VlZX/nZ2d/4+Pj/+ZmZn/tLS0/5OTk/8QEBD/09PT/xAQ
        EP+Tk5P/s7Oz/5eXl/+Ojo7/nZ2d/5mZmf8cHBz/QEBA/w4ODpAODg4ADg4OAA4ODgAODg4ADg4OAA4O
        DgC8vLwAvLy8AL6+vgDDw8MAysrKAA4ODoQbGxv/hoaG/6qqqv+Xl5f/nJyc/7Ozs/+wsLD/Hh4e/1Ns
        hf9xlbn/ZHmO/x4eHv+urq7/rq6u/5qamv+Xl5f/rKys/4KCgv8ODg7eDg4OAA4ODgAODg4ADg4OAA4O
        DgAODg4ADg4OAL29vQC9vb0Avb29AMDAwADFxcUAzMzMAA4ODsxxcXH/qqqq/66urv+6urr/wMDA/zc3
        N/9KYHX/m8Ln/5vC5/+Ottz/LDtK/zk5Of+/v7//tra2/66urv+ysrL/SUlJ/w4ODmEODg4ADg4OAA4O
        DgAODg4ADg4OAA4ODgAODg4Avr6+AL6+vgC+vr4Av7+/AMHBwQDHx8cADg4OTkVFRf/Gxsb/zMzM/8vL
        y/9GRkb/U2Rz/6/U9/+v1Pf/r9T3/6/U9/+v1Pf/Iikw/3Z2dv/MzMz/ysrK/6+vr/8QEBD/Dg4OAw4O
        DgAODg4ADg4OAA4ODgAODg4ADg4OAA4ODgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODg4SGxsb/9TU
        1P/X19f/TExM/1Njcv+v0/b/r9P2/6/T9v+v0/b/r9P2/6/T9v+Cm7T/FRUV/7y8vP/a2tr/XFxc/w4O
        DnIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAODg7Jra2t/1RUVP8wOkL/EhYa/wAAAP8xPEX/l7jV/67T9f9mfJD/EhYa/wAAAP8bICb/ODg4/8jI
        yP8TExP/Dg4OBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA4ODmAlJSX/UGd+/wAAAP8AAAD/AAAA/wAAAP9CT1z/osPj/wAAAP8AAAD/AAAA/wAA
        AP8iKS//Ly8v/w8QEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>